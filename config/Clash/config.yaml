######### 锚点 start #######
# 策略组相关
pr: &pr {type: select, proxies: [🚀 节点选择, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, ♻️ 自动选择, 🟢 全球直连]}
#这里是订阅更新和延迟测试相关的
p: &p {type: http, interval: 3600, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 300}}
######### 锚点 end #######

# url 里填写自己的订阅,名称不能重复
proxy-providers:
  provider1:
    <<: *p
    url: ""
  provider2:
    <<: *p
    url: ""
##### 全局设置配置 #####
mode: rule
ipv6: false
allow-lan: true
mixed-port: 7890

# ui 配置
external-controller: 0.0.0.0:9090
external-ui: /etc/mihomo/metacubexd
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"
secret: ''

profile:
  store-selected: true
  store-fake-ip: true
  tracing: true

sniffer:
  enable: true
  sniff:
    TLS:
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true

interface-name: eth0

# TUN 配置
tun:
  device: utun
  enable: true
  stack: system
  auto-route: true
  auto-detect-interface: false

# DNS 配置  
dns:
  enable: true
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "+.local"
  default-nameserver:
    - 223.5.5.5
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
    
proxies:
- name: "🟢 全球直连"
  type: direct
  udp: true

proxy-groups:
- {name: 🚀 节点选择, type: select, proxies: [♻️ 自动选择, 🟢 全球直连, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点]}
- {name: 🍀 Google, <<: *pr}
- {name: 📹 YouTube, <<: *pr}
- {name: 🤖 人工智能, <<: *pr}
- {name: 📲 Telegram, <<: *pr}
- {name: 💎 Twitter, <<: *pr}
- {name: 👨‍💻 GitHub, <<: *pr}
- {name: 🎼 Spotify, <<: *pr}
- {name: Ⓜ️ 微软服务, type: select, proxies: [🟢 全球直连, 🚀 节点选择]}
- {name: 🎮 游戏服务, type: select, proxies: [🟢 全球直连, 🚀 节点选择]}
- {name: 🍎 苹果服务, type: select, proxies: [🟢 全球直连, 🚀 节点选择]}
- {name: 🐟 漏网之鱼, type: select, proxies: [🟢 全球直连, 🚀 节点选择]}

#- {name: 🟢 全球直连, type: select, proxies: [DIRECT], hidden: true}

  #分隔,下面是地区分组
- {name: 🇭🇰 香港节点, type: select, include-all: true, filter: "(?i)(?!直连)(港|hk|hongkong|hong kong)"}
- {name: 🇹🇼 台湾节点, type: select, include-all: true, filter: "(?i)(?!直连)(台|tw|taiwan)"}
- {name: 🇯🇵 日本节点, type: select, include-all: true, filter: "(?i)(?!直连)(日|jp|japan)"}
- {name: 🇺🇲 美国节点, type: select, include-all: true, filter: "(?i)(?!直连)(美|us|unitedstates|america)"}
- {name: 🇸🇬 狮城节点, type: select, include-all: true, filter: "(?i)(?!直连)(新|sg|singapore)"}
- {name: ♻️ 自动选择, type: url-test, include-all: true, tolerance: 10}
- {name: 🌐 全部节点, type: select, include-all: true}

rules:
- GEOIP,lan,🟢 全球直连,no-resolve
- RULE-SET,microsoft_domain,Ⓜ️ 微软服务
- RULE-SET,apple_domain,🍎 苹果服务
- RULE-SET,ai_domain,🤖 人工智能
- RULE-SET,github_domain,👨‍💻 GitHub
- RULE-SET,twitter_domain,💎 Twitter
- RULE-SET,youtube_domain,📹 YouTube
- RULE-SET,google_domain,🍀 Google
- RULE-SET,telegram_domain,📲 Telegram
- RULE-SET,games_domain,🎮 游戏服务
- RULE-SET,spotify_domain,🎼 Spotify
- RULE-SET,geolocation-!cn,🐟 漏网之鱼

- RULE-SET,google_ip,🍀 Google
- RULE-SET,telegram_ip,📲 Telegram
- RULE-SET,twitter_ip,💎 Twitter
- MATCH,🐟 漏网之鱼

rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: text}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: text}
rule-providers:
  private:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.list"
  apple_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.list"
  microsoft_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geosite/microsoft.list"
  ai_domain:
    <<: *domain
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/ai.list"
  github_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.list"
  twitter_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/twitter.list"
  youtube_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.list"
  google_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.list"
  telegram_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.list"
  games_domain:
    <<: *domain
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/games.list"
  spotify_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.list"
  geolocation-!cn:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.list"

  cn_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.list"
  google_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.list"
  netflix_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.list"
  twitter_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/twitter.list"
  telegram_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.list"

